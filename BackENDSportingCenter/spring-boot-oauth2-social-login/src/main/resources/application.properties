# Database configuration props
#spring.datasource.url=jdbc:mysql://localhost:3306/sportingCenter?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate props
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Social login provider props
spring.security.oauth2.client.registration.google.clientId=113702260048-337v93sq41dlf00efsct8ulj9sggjbtk.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=ieWZxxr6NkCwatx3pcSx-O7j
spring.security.oauth2.client.registration.facebook.clientId=2790661624519435
spring.security.oauth2.client.registration.facebook.clientSecret=d77b4c8c9ad47cd21fa2419432b88fad
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture

app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorization request.
    # We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://localhost:4200/login/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
# For detailed logging during development
#logging.level.com=TRACE
logging.level.org.springframework=TRACE
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE
